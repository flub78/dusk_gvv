<?php

namespace Tests\libraries;

/**
 * This class manages planes in the Dusk tet context.
 * 
 * A plane handler is an object to access plane data through a browser and a Dusk test context.
 * 
 * The persistence is managed by the WEB application and as we only have access to the WEB interface methods to retreive the information may be indirect.
 */

class PlaneHandler {

    private $browser;
    private $tc;

    /** Constructor */
    function __construct($browser, $test_context) {
        $this->browser = $browser;
        $this->tc = $test_context;
    }

    /** 
     * Check that a plane exists.
     * 
     * As plane IDs are not public (they are generated by the database), we check that the plane image is present in a select.
     */
    public function PlaneExists($plane) {
        $selectValues = $this->tc->geyValuesFromSelect($this->browser, "vols_avion/create", "vamacid");

        foreach ($selectValues as $key => $value) {
            if ($value == $plane['immat']) {
                return true;
            }
        }
        return false;
    }

    /** 
     * Create planes
     */
    public function CreatePlanes($list = []) {
        foreach ($list as $elt) {
            if (!$this->PlaneExists($elt)) {

                // Create product
                echo "creating " . $elt['immat'] . "\n";
                $this->tc->canAccess($this->browser, "avion/create", ['Avion']);
                $this->browser
                    ->type('macconstruc', $elt['construct'])
                    ->type('macmodele', $elt['type'])
                    ->type('macimmat', $elt['immat']);

                if (array_key_exists('prix', $elt)) {
                    $this->browser->select('maprix', $elt['prix']);
                }

                if (array_key_exists('prix_dc', $elt)) {
                    $this->browser->select('maprixdc', $elt['prix_dc']);
                }

                if (array_key_exists('remorqueur', $elt)) {
                    // <input type="checkbox" name="macrem" value="1" id="macrem">
                    $this->browser->check('macrem');
                }

                $this->browser->type('macplaces', $elt['nb_places'])
                    ->scrollIntoView('#validate')
                    ->waitFor('#validate')
                    ->press('#validate');
            }
            $this->tc->assertTrue(
                $this->PlaneExists($elt),
                "plane exists: " . $elt['immat']
            );
        }
    }
}
