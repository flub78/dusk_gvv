<?php

namespace Tests\libraries;

use Tests\libraries\AccountHandler;

/**
 * This class manages poducts in the Dusk tet context.
 * 
 * A poduct handler is an object to access poduct data through a browser and a Dusk test context.
 * 
 * The persistence is managed by the WEB application and as we only have access to the WEB interface methods to retreive the information may be indirect.
 */

class ProductHandler {

    private $browser;
    private $tc;

    /** Constructor */
    function __construct($browser, $test_context) {
        $this->browser = $browser;
        $this->tc = $test_context;
    }

    /** 
     * Check that a product exists.
     * 
     * As product IDs are not public (they are generated by the database), we check that the product image is present in a select.
     */
    public function ProductExists($product) {
        $selectValues = $this->tc->geyValuesFromSelect($this->browser, "planeur/create", "mprix");

        // var_dump($selectValues);

        $ref = $product['ref'];
        $price = number_format($product['prix'], 2);
        $str = "$ref : $price";

        foreach ($selectValues as $key => $value) {
            if ($value == $str) {
                return true;
            }
        }
        return false;
    }

    /** 
     * Create products
     */
    public function CreateProducts($list = []) {
        $account_handler = new AccountHandler($this->browser, $this->tc);

        foreach ($list as $elt) {
            if (!$this->ProductExists($elt)) {

                $account = [
                    'nom'   => $elt['account'],
                    'codec' => $elt['codec']
                ];
                $account_id = $account_handler->AccountIdFromName($account);

                // Create product
                $this->tc->canAccess($this->browser, "tarifs/create", ['Tarif']);
                $this->browser
                    ->type('date', $elt['date'] . "\n")
                    ->type('reference', $elt['ref'])
                    ->type('description', $elt['description'])
                    ->type('prix', $elt['prix'])
                    ->select('compte', $account_id)
                    ->scrollIntoView('#validate')
                    ->waitFor('#validate')
                    ->press('#validate');
            }
            $this->tc->assertTrue(
                $this->ProductExists($elt),
                "product exists: (" . $elt['ref'] . ')' . $elt['prix']
            );
        }
    }
}
